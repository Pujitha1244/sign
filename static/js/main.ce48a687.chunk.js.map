{"version":3,"sources":["components/UI/Card.js","components/Signup/validate.js","components/Signup/SignUpForm.js","components/Signup/SignUpLeft.js","components/Signup/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","children","validate","values","errors","email","test","firstName","lastName","password","length","SignUpForm","useState","formData","setFormData","setErrors","onChange","e","target","name","value","onSubmit","preventDefault","type","placeholder","SignUpLeft","SignUp","App","style","backgroundImage","backgroundColor","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce48a687.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Card.css\";\r\n\r\nfunction Card(props) {\r\n  return <div className=\"card\">{props.children}</div>;\r\n}\r\n\r\nexport default Card;\r\n","// const validate = (values) => {\r\n//   let errors = {};\r\n\r\n//   if (!values.email) {\r\n//     errors.email = \"email  is invalid\";\r\n//   } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n//     errors.email = \"email  is required\";\r\n//   }\r\n\r\n//   if (!values.username) {\r\n//     errors.username = \"username  is required\";\r\n//   }\r\n\r\n//   if (!values.password) {\r\n//     errors.password = \"password must be more than 5 chars\";\r\n//   } else if (values.password.length < 4) {\r\n//     errors.password = \"password must be more than 5 chars\";\r\n//   }\r\n\r\n//   return errors;\r\n// };\r\n\r\n// export default validate;\r\n\r\nconst validate = (values) => {\r\n  let errors = {};\r\n\r\n  if (!values.email) {\r\n    errors.email = \"email  is required\";\r\n  } else if (!/\\S+@\\S+\\.\\S+/.test(values.email)) {\r\n    errors.email = \"email  is invalid\";\r\n  }\r\n\r\n  if (!values.firstName) {\r\n    errors.firstName = \"First Name is required\";\r\n  }\r\n\r\n  if (!values.lastName) {\r\n    errors.lastName = \"Last Name is required\";\r\n  }\r\n\r\n  if (!values.password) {\r\n    errors.password = \"password  is required\";\r\n  } else if (values.password.length < 4) {\r\n    errors.password = \"password must be more than 5 chars\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default validate;\r\n","// import React, { useState } from \"react\";\r\n// import { useForm } from \"react-hook-form\";\r\n// import Card from \"../UI/Card\";\r\n// import Input from \"../UI/Input\";\r\n// import \"./SignUpForm.css\";\r\n// import validate from \"./validate\";\r\n\r\n// function SignUpForm() {\r\n//   const [firstName, setFirstName] = useState(\"\");\r\n//   const [lastName, setLastName] = useState(\"\");\r\n//   const [email, setEmail] = useState(\" \");\r\n//   const [passwd, setPassword] = useState(\"\");\r\n//   const [FirstValid, setFirstValid] = useState(false);\r\n//   const [lastValid, setlastValid] = useState(false);\r\n//   const [emailValid, setEmailIsValid] = useState(false);\r\n//   const [passwordValid, setPasswordValid] = useState(false);\r\n//   let mailvalid;\r\n\r\n//   const [errors, setErrors] = useState({});\r\n//   // const { register, handleSubmit, errors } = useForm();\r\n//   const firstNameChangeHandler = (event) => {\r\n//     setFirstName(event.target.value);\r\n//   };\r\n\r\n//   const lastNameChangeHandler = (event) => {\r\n//     setLastName(event.target.value);\r\n//   };\r\n\r\n//   const emailChangeHandler = (event) => {\r\n//     event.preventDefault();\r\n//     setEmail(event.target.value);\r\n//     mailvalid = email.includes(\"@\");\r\n//   };\r\n\r\n//   const passwordChangeHandler = (event) => {\r\n//     event.preventDefault();\r\n//     setPassword(event.target.value);\r\n//   };\r\n\r\n//   const nameHandler = () => {};\r\n\r\n//   const submitHandler = (event) => {\r\n//     setErrors(validate(email));\r\n//     setErrors(validate(passwd));\r\n//     event.preventDefault();\r\n//     if (firstName.trim().length === 0) {\r\n//       setFirstValid(true);\r\n//     }\r\n//     if (lastName.trim().length === 0) {\r\n//       setlastValid(true);\r\n//     }\r\n//     if (email.trim().length === 0 || mailvalid === false) {\r\n//       setEmailIsValid(true);\r\n//     }\r\n//     if (passwd.trim().length === 0) {\r\n//       setPasswordValid(true);\r\n//     }\r\n//     console.log(firstName);\r\n//     console.log(lastName);\r\n//     console.log(email);\r\n//   };\r\n//   return (\r\n//     <div className=\"signupCard\">\r\n//       <button className=\"signUpTop\">\r\n//         Try it free 7 days then $20/m thereafter.\r\n//       </button>\r\n//       <div className=\"card1\">\r\n//         <Card>\r\n//           <form onSubmit={submitHandler}>\r\n//             <div className=\"input1\">\r\n//               {/* <input type=\"text\" placeholder=\"First Name\"></input> */}\r\n//               <Input\r\n//                 type=\"text\"\r\n//                 value={firstName.value}\r\n//                 onChange={firstNameChangeHandler}\r\n//                 placeholder=\"First Name\"\r\n//                 onBlur={nameHandler}\r\n//               />\r\n//               {FirstValid && (\r\n//                 <p className=\"formValid\">First Name cannot be empty</p>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"input1\">\r\n//               {/* <input type=\"text\" placeholder=\"Last Name\"></input> */}\r\n//               <Input\r\n//                 type=\"text\"\r\n//                 value={lastName.value}\r\n//                 onChange={lastNameChangeHandler}\r\n//                 placeholder=\"Last Name\"\r\n//               />\r\n//               {lastValid && (\r\n//                 <p className=\"formValid\">Last Name cannot be empty</p>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"input1\">\r\n//               {/* <input type=\"text\" placeholder=\"Email\"></input> */}\r\n//               <Input\r\n//                 // type=\"email\"\r\n//                 value={email.value}\r\n//                 placeholder=\"Email\"\r\n//                 onChange={emailChangeHandler}\r\n//               />\r\n//               {errors.email && <p className=\"formValid\">{errors.email}</p>}\r\n\r\n//               {/* {emailValid && <p className=\"formValid\">Email cannot be empty</p>} */}\r\n//             </div>\r\n//             <div className=\"input1\">\r\n//               {/* <input type=\"text\" placeholder=\"Password\"></input> */}\r\n//               <Input\r\n//                 // type=\"password\"\r\n//                 value={passwd.value}\r\n//                 placeholder=\"Password\"\r\n//                 onChange={passwordChangeHandler}\r\n//               />\r\n//               {errors.password && <p className=\"error\">{errors.password}</p>}\r\n//               {/* {passwordValid && (\r\n//                 <p className=\"formValid\">Password cannot be empty</p>\r\n//               )} */}\r\n//             </div>\r\n\r\n//             <div>\r\n//               <button className=\"signUpSubmit\" type=\"submit\">\r\n//                 CLAIM YOUR FREE TRAIL\r\n//               </button>\r\n//             </div>\r\n//             <div>\r\n//               <p className=\"formLast\">\r\n//                 By clicking the button, you are agreeing to our Terms and\r\n//                 Services\r\n//               </p>\r\n//             </div>\r\n//           </form>\r\n//         </Card>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default SignUpForm;\r\n\r\nimport React, { useState } from \"react\";\r\nimport Card from \"../UI/Card\";\r\nimport validate from \"./validate\";\r\nimport Input from \"../UI/Input\";\r\nimport \"./SignUpForm.css\";\r\n\r\nfunction SignUpForm() {\r\n  const [formData, setFormData] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  const { firstName, lastName, email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validate(formData));\r\n  };\r\n  return (\r\n    <div className=\"signupCard\">\r\n      <Card>\r\n        <form onSubmit={(e) => onSubmit(e)}>\r\n          <div className=\"input1\">\r\n            <input\r\n              className=\"formdata1\"\r\n              name=\"firstName\"\r\n              type=\"text\"\r\n              value={firstName}\r\n              placeholder=\"First Name\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            {errors.firstName && (\r\n              <p className=\"formValid\">{errors.firstName}</p>\r\n            )}\r\n          </div>\r\n          <div className=\"input1\">\r\n            <input\r\n              className=\"formdata1\"\r\n              name=\"lastName\"\r\n              type=\"text\"\r\n              value={lastName}\r\n              placeholder=\"Last Name\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            {errors.lastName && <p className=\"formValid\">{errors.lastName}</p>}\r\n          </div>\r\n          <div className=\"input1\">\r\n            <input\r\n              className=\"formdata1\"\r\n              name=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              placeholder=\"email\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            {errors.email && <p className=\"formValid\">{errors.email}</p>}\r\n          </div>\r\n          <div className=\"input1\">\r\n            <input\r\n              className=\"formdata1\"\r\n              name=\"password\"\r\n              type=\"text\"\r\n              value={password}\r\n              placeholder=\"password\"\r\n              onChange={(e) => onChange(e)}\r\n            />\r\n            {errors.password && <p className=\"formValid\">{errors.password}</p>}\r\n          </div>\r\n          <div>\r\n            <button className=\"signUpSubmit\" type=\"submit\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpForm;\r\n","import React from \"react\";\r\nimport \"./SignUpLeft.css\";\r\n\r\nfunction SignUpLeft() {\r\n  return (\r\n    <div className=\"SignUp__Left\">\r\n      <p className=\"signUp__leftHead\">Learn to code by watching others</p>\r\n      <p className=\"signUp__leftP\">\r\n        See how experienced developers solve problems in real-time. Watching\r\n        scripting tutorials is great, but understanding how developers think is\r\n        invaluable.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUpLeft;\r\n","import React from \"react\";\r\nimport SignUpForm from \"./SignUpForm\";\r\nimport SignUpLeft from \"./SignUpLeft\";\r\nimport \"./SignUp.css\";\r\n\r\nfunction SignUp() {\r\n  return (\r\n    <div className=\"SignUp\">\r\n      <>\r\n        <SignUpLeft className=\"left\" />\r\n      </>\r\n      <>\r\n        <SignUpForm />\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import \"./App.css\";\nimport SignUp from \"./components/Signup/SignUp\";\n\nfunction App() {\n  return (\n    <div\n      className=\"App\"\n      style={{\n        backgroundImage: \"url(/images/back.png)\",\n        backgroundColor: \"#f54748\",\n        width: \"100%\",\n        // height: \"100vh\",\n        // opacity: \"0.8\",\n      }}\n    >\n      <SignUp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}